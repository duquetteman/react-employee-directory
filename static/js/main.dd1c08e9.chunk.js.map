{"version":3,"sources":["utils/DataAreaContext.js","components/DataBody.js","components/DataTable.js","components/SearchName.js","components/Nav.js","utils/API.js","components/DataArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["dataArea","React","createContext","DataBody","context","useContext","DataAreaContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","key","uuid","data-th","className","src","large","alt","first","last","href","target","DataTable","id","headings","width","style","onClick","handleSort","SearchName","placeholder","aria-label","onChange","e","handleSearchChange","Nav","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","console","log","data","Provider","value","event","filter","filteredList","item","values","toLowerCase","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","age","updatedHeadings","length","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"0TAMeA,EAJEC,IAAMC,cAAc,ICyCtBC,EAxCE,WACf,IAAMC,EAAUC,qBAAWC,GAI3B,OACE,oCAC+CC,IAA5CH,EAAQI,eAAeC,cAAc,SAAqEF,IAAjDH,EAAQI,eAAeC,cAAc,GAAGC,KAChGN,EAAQI,eAAeC,cAAcE,KAAI,YAA2C,IAAzCC,EAAwC,EAAxCA,MAAOF,EAAiC,EAAjCA,KAAMG,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACtE,OACE,wBAAIC,IAAKJ,EAAMK,MACb,wBAAIC,UAAQ,QAASC,UAAU,gBAC7B,yBACEC,IAAKP,EAAQQ,MACbC,IAAK,qBAAuBZ,EAAKa,MAAQ,IAAMb,EAAKc,KACpDL,UAAU,wBAId,wBAAID,UAAQ,OAAOC,UAAU,0BAC1BT,EAAKa,MADR,IACgBb,EAAKc,MAErB,wBAAIN,UAAQ,QAAQC,UAAU,gBAC3BL,GAEH,wBAAII,UAAQ,QAAQC,UAAU,gBAC5B,uBAAGM,KAAM,UAAYV,EAAOW,OAAO,WAChCX,QAOX,uCCGOY,EApCG,WAChB,IAAMvB,EAAUC,qBAAWC,GAE3B,OAEE,yBAAKa,UAAU,kBACb,2BACES,GAAG,QACHT,UAAU,yBAEV,+BACE,4BACGf,EAAQI,eAAeqB,SAASlB,KAAI,YAAsB,IAAnBD,EAAkB,EAAlBA,KAAMoB,EAAY,EAAZA,MAC5C,OACE,wBACEX,UAAU,MACVH,IAAKN,EACLqB,MAAO,CAAED,SACTE,QAAS,WACP5B,EAAQ6B,WAAWvB,KAGpBA,EACD,0BAAMS,UAAU,kBAO1B,kBAAC,EAAD,SCZOe,EAnBI,WACjB,IAAM9B,EAAUC,qBAAWC,GAE3B,OAEI,yBAAKa,UAAU,eACX,yBAAKA,UAAU,wBAGf,2BACAA,UAAU,eACVgB,YAAY,cACZC,aAAW,SACXC,SAAU,SAAAC,GAAC,OAAIlC,EAAQmC,mBAAmBD,QCArCE,MAbf,WACE,OACE,yBAAKrB,UAAU,yCAEb,yBAAKA,UAAU,uBAAuBS,GAAG,aAEvC,yBAAKT,UAAU,sBACb,kBAAC,EAAD,U,iBCRK,EACH,WAER,OAAOsB,IAAMC,IAAI,iDCyGNC,G,MAvGE,WAAO,IAAD,EACuBC,mBAAS,CACnDC,MAAO,GACPC,MAAO,UACPrC,cAAe,GACfoB,SAAU,CACR,CAAEnB,KAAM,GAAIoB,MAAO,MAAOgB,MAAO,WACjC,CAAEpC,KAAM,OAAQoB,MAAO,MAAOgB,MAAO,WACrC,CAAEpC,KAAM,QAASoB,MAAO,MAAOgB,MAAO,WACtC,CAAEpC,KAAM,QAASoB,MAAO,MAAOgB,MAAO,cATrB,mBACdtC,EADc,KACEuC,EADF,KA2FrB,OAXAC,qBAAU,WACRC,IAAeC,MAAK,SAAAC,GAClBC,QAAQC,IAAIF,EAAQG,KAAKH,SACzBJ,EAAkB,eACbvC,EADY,CAEfqC,MAAOM,EAAQG,KAAKH,QACpB1C,cAAe0C,EAAQG,KAAKH,gBAG/B,IAGD,kBAAC7C,EAAgBiD,SAAjB,CACEC,MAAO,CAAEhD,iBAAgB+B,mBA1BF,SAAAkB,GACzB,IAAMC,EAASD,EAAM/B,OAAO8B,MACtBG,EAAenD,EAAeqC,MAAMa,QAAO,SAAAE,GAC/C,IAAIC,EAASD,EAAKlD,KAAKa,MAAMuC,cAAgB,IAAMF,EAAKlD,KAAKc,KAAKsC,cAEpE,GADEV,QAAQC,IAAIK,EAAQG,IACuB,IAA1CA,EAAOE,QAAQL,EAAOI,eACvB,OAAOF,KAITb,EAAkB,eAAKvC,EAAN,CAAsBC,cAAekD,MAgBP1B,WAhF9B,SAAA+B,GACjB,IAAIC,EAAezD,EAAeqB,SAC/B6B,QAAO,SAAAQ,GAAI,OAAIA,EAAKxD,OAASsD,KAC7BrD,KAAI,SAAAuD,GAAI,OAAIA,EAAKpB,SACjBqB,WAGDF,EADmB,YAAjBA,EACa,SAEA,UAGjB,IA6BMG,EAAc5D,EAAeC,cAAc4D,MA7B9B,SAACC,EAAGC,GACrB,MAAqB,WAAjBN,OACiB1D,IAAf+D,EAAEN,GACG,OACiBzD,IAAfgE,EAAEP,IACH,EAEW,SAAZA,EACAM,EAAEN,GAASzC,MAAMiD,cAAcD,EAAEP,GAASzC,OAC5B,QAAZyC,EACFM,EAAEN,GAASS,IAAMF,EAAEP,GAASS,IAE5BH,EAAEN,GAASQ,cAAcD,EAAEP,SAGjBzD,IAAf+D,EAAEN,GACG,OACiBzD,IAAfgE,EAAEP,IACH,EAEW,SAAZA,EACAO,EAAEP,GAASzC,MAAMiD,cAAcF,EAAEN,GAASzC,OAC7B,QAAZyC,EACDO,EAAEP,GAASS,IAAMH,EAAEN,GAASS,IAE5BF,EAAEP,GAASQ,cAAcF,EAAEN,OAKlCU,EAAkBlE,EAAeqB,SAASlB,KAAI,SAAAuD,GAElD,OADAA,EAAKpB,MAAQoB,EAAKxD,OAASsD,EAAUC,EAAeC,EAAKpB,MAClDoB,KAGTnB,EAAkB,eACbvC,EADY,CAEfC,cAAe2D,EACfvC,SAAU6C,QAgCV,kBAAC,EAAD,MACA,yBAAKvD,UAAU,aACZX,EAAeC,cAAckE,OAAS,EAAI,kBAAC,EAAD,MAAgB,kCC5FpDC,MARf,WACI,OACE,6BACE,kBAAC,EAAD,QCGOC,MARf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,OACI,yBAAK3D,UAAU,WACX2D,I,MCMKC,MARf,WACI,OACI,yBAAK5D,UAAU,UACX,oD,MCYG6D,MAXf,WACE,OACE,yBAAK7D,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCAY8D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1C,MAAK,SAAA2C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5C,QAAQ4C,MAAMA,EAAMC,c","file":"static/js/main.dd1c08e9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst dataArea = React.createContext({\n\n});\n\nexport default dataArea;","import React, { useContext } from \"react\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataBody = () => {\n  const context = useContext(DataAreaContext);\n\n  \n\n  return (\n    <tbody>\n      {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\n        context.developerState.filteredUsers.map(({login, name, picture, phone, email}) => {\n          return (\n            <tr key={login.uuid}>\n              <td data-th=\"Image\"  className=\"align-middle\">\n                <img\n                  src={picture.large}\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\n                  className=\"img-responsive pic\"\n                  \n                />\n              </td>\n              <td data-th=\"Name\" className=\"name-cell align-middle\">\n                {name.first} {name.last}\n              </td>\n              <td data-th=\"Phone\" className=\"align-middle\">\n                {phone}\n              </td>\n              <td data-th=\"Email\" className=\"align-middle\">\n                <a href={\"mailto:\" + email} target=\"__blank\">\n                  {email}\n                </a>\n              </td>\n            </tr>\n          );\n        })\n      ) : (\n        <></>\n      )}\n    </tbody>\n  );\n}\n\nexport default DataBody;\n","import React, { useContext } from \"react\";\nimport DataBody from \"./DataBody\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataTable = () => {\n  const context = useContext(DataAreaContext);\n\n  return (\n\n    <div className=\"datatable mt-5\">\n      <table\n        id=\"table\"\n        className=\"table table-condensed\"\n      >\n        <thead>\n          <tr>\n            {context.developerState.headings.map(({ name, width }) => {\n              return (\n                <th\n                  className=\"col\"\n                  key={name}\n                  style={{ width }}\n                  onClick={() => {\n                    context.handleSort(name);\n                  }}\n                >\n                  {name}\n                  <span className=\"pointer\"></span>\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n\n        <DataBody />\n      </table>\n    </div>\n  );\n}\n\nexport default DataTable;\n","import React, { useContext } from \"react\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst SearchName = () => {\n  const context = useContext(DataAreaContext);\n\n  return (\n    \n      <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            \n          </div>\n          <input\n          className=\"form-control\"\n          placeholder=\"Search Name\"\n          aria-label=\"Search\"\n          onChange={e => context.handleSearchChange(e)}\n        />\n        </div>\n   \n  );\n}\nexport default SearchName;\n","import React from \"react\";\nimport SearchName from \"./SearchName.js\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light \">\n     \n      <div className=\" navbar-collapse row\" id=\"navbarNav\">\n      \n        <div className=\"search-area col-10\">\n          <SearchName />\n        </div>\n      </div>\n    </nav>\n  );\n}\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n  getUsers: function() {\n\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\nimport DataAreaContext from \"../utils/DataAreaContext\";\n\nconst DataArea = () => {\n  const [developerState, setDeveloperState] = useState({\n    users: [],\n    order: \"descend\",\n    filteredUsers: [],\n    headings: [\n      { name: \"\", width: \"10%\", order: \"descend\" },\n      { name: \"name\", width: \"10%\", order: \"descend\" },\n      { name: \"phone\", width: \"20%\", order: \"descend\" },\n      { name: \"email\", width: \"20%\", order: \"descend\" }\n    ]\n  });\n\n  const handleSort = heading => {\n    let currentOrder = developerState.headings\n      .filter(elem => elem.name === heading)\n      .map(elem => elem.order)\n      .toString();\n\n    if (currentOrder === \"descend\") {\n      currentOrder = \"ascend\";\n    } else {\n      currentOrder = \"descend\";\n    }\n\n    const compareFnc = (a, b) => {\n      if (currentOrder === \"ascend\") {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        else if (heading === \"name\") {\n          return a[heading].first.localeCompare(b[heading].first);\n        } else if (heading === \"dob\") {\n          return a[heading].age - b[heading].age;\n        } else {\n          return a[heading].localeCompare(b[heading]);\n        }\n      } else {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        else if (heading === \"name\") {\n          return b[heading].first.localeCompare(a[heading].first);\n        }else if (heading === \"dob\") {\n          return b[heading].age - a[heading].age;\n        }  else {\n          return b[heading].localeCompare(a[heading]);\n        }\n      }\n    };\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n    const updatedHeadings = developerState.headings.map(elem => {\n      elem.order = elem.name === heading ? currentOrder : elem.order;\n      return elem;\n    });\n\n    setDeveloperState({\n      ...developerState,\n      filteredUsers: sortedUsers,\n      headings: updatedHeadings\n    });\n  };\n\n  const handleSearchChange = event => {\n    const filter = event.target.value;\n    const filteredList = developerState.users.filter(item => {\n      let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\n      console.log(filter, values)\n    if(values.indexOf(filter.toLowerCase()) !== -1){\n      return item\n    };\n    });\n\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\n  };\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n      console.log(results.data.results);\n      setDeveloperState({\n        ...developerState,\n        users: results.data.results,\n        filteredUsers: results.data.results\n      });\n    });\n  }, []);\n\n  return (\n    <DataAreaContext.Provider\n      value={{ developerState, handleSearchChange, handleSort }}\n    >\n      <Nav />\n      <div className=\"data-area\">\n        {developerState.filteredUsers.length > 0 ? <DataTable /> : <div></div>}\n      </div>\n    </DataAreaContext.Provider>\n  );\n};\n\nexport default DataArea;\n","import React from \"react\";\nimport DataArea from \"./DataArea\";\n\n\nfunction Main () {\n    return (\n      <div>\n        <DataArea />\n      </div>\n    );\n  };\n\nexport default Main;\n","import React from 'react';\n\nfunction Wrapper({ children }) {\n  return (\n      <div className=\"wrapper\">\n        { children }\n      </div>\n  );\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport \"../styles/Header.css\";\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <h1>Employee Directory</h1>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}